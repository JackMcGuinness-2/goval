
state 0
	$accept: .program $end 

	LITERAL_NIL  shift 10
	LITERAL_BOOL  shift 11
	LITERAL_NUMBER  shift 12
	LITERAL_STRING  shift 13
	IDENT  shift 9
	BIT_NOT  shift 18
	'-'  shift 16
	'!'  shift 17
	'['  shift 14
	'('  shift 8
	'{'  shift 15
	.  error

	program  goto 1
	expr  goto 2
	literal  goto 3
	math  goto 4
	logic  goto 5
	bitManipulation  goto 6
	varAccess  goto 7

state 1
	$accept:  program.$end 

	$end  accept
	.  error


state 2
	program:  expr.    (1)
	math:  expr.'+' expr 
	math:  expr.'-' expr 
	math:  expr.'*' expr 
	math:  expr.'/' expr 
	math:  expr.'%' expr 
	logic:  expr.EQL expr 
	logic:  expr.NEQ expr 
	logic:  expr.LSS expr 
	logic:  expr.GTR expr 
	logic:  expr.LEQ expr 
	logic:  expr.GEQ expr 
	logic:  expr.AND expr 
	logic:  expr.OR expr 
	bitManipulation:  expr.'|' expr 
	bitManipulation:  expr.'&' expr 
	bitManipulation:  expr.'^' expr 
	bitManipulation:  expr.SHL expr 
	bitManipulation:  expr.SHR expr 
	varAccess:  expr.'.' IDENT 
	varAccess:  expr.'[' expr ']' 
	varAccess:  expr.IN expr 
	varAccess:  expr.'[' expr ':' expr ']' 
	varAccess:  expr.'[' ':' expr ']' 
	varAccess:  expr.'[' expr ':' ']' 
	varAccess:  expr.'[' ':' ']' 

	AND  shift 30
	OR  shift 31
	EQL  shift 24
	NEQ  shift 25
	LSS  shift 26
	GTR  shift 27
	LEQ  shift 28
	GEQ  shift 29
	SHL  shift 35
	SHR  shift 36
	IN  shift 39
	'|'  shift 32
	'^'  shift 34
	'&'  shift 33
	'+'  shift 19
	'-'  shift 20
	'*'  shift 21
	'/'  shift 22
	'%'  shift 23
	'.'  shift 37
	'['  shift 38
	.  reduce 1 (src line 62)


state 3
	expr:  literal.    (2)

	.  reduce 2 (src line 70)


state 4
	expr:  math.    (3)

	.  reduce 3 (src line 72)


state 5
	expr:  logic.    (4)

	.  reduce 4 (src line 73)


state 6
	expr:  bitManipulation.    (5)

	.  reduce 5 (src line 74)


state 7
	expr:  varAccess.    (6)

	.  reduce 6 (src line 75)


state 8
	expr:  '('.expr ')' 

	LITERAL_NIL  shift 10
	LITERAL_BOOL  shift 11
	LITERAL_NUMBER  shift 12
	LITERAL_STRING  shift 13
	IDENT  shift 9
	BIT_NOT  shift 18
	'-'  shift 16
	'!'  shift 17
	'['  shift 14
	'('  shift 8
	'{'  shift 15
	.  error

	expr  goto 40
	literal  goto 3
	math  goto 4
	logic  goto 5
	bitManipulation  goto 6
	varAccess  goto 7

state 9
	expr:  IDENT.'(' ')' 
	expr:  IDENT.'(' exprList ')' 
	varAccess:  IDENT.    (39)

	'('  shift 41
	.  reduce 39 (src line 122)


state 10
	literal:  LITERAL_NIL.    (10)

	.  reduce 10 (src line 81)


state 11
	literal:  LITERAL_BOOL.    (11)

	.  reduce 11 (src line 83)


state 12
	literal:  LITERAL_NUMBER.    (12)

	.  reduce 12 (src line 84)


state 13
	literal:  LITERAL_STRING.    (13)

	.  reduce 13 (src line 85)


state 14
	literal:  '['.']' 
	literal:  '['.exprList ']' 

	LITERAL_NIL  shift 10
	LITERAL_BOOL  shift 11
	LITERAL_NUMBER  shift 12
	LITERAL_STRING  shift 13
	IDENT  shift 9
	BIT_NOT  shift 18
	'-'  shift 16
	'!'  shift 17
	'['  shift 14
	']'  shift 42
	'('  shift 8
	'{'  shift 15
	.  error

	expr  goto 44
	literal  goto 3
	math  goto 4
	logic  goto 5
	bitManipulation  goto 6
	varAccess  goto 7
	exprList  goto 43

state 15
	literal:  '{'.'}' 
	literal:  '{'.exprMap '}' 

	LITERAL_NIL  shift 10
	LITERAL_BOOL  shift 11
	LITERAL_NUMBER  shift 12
	LITERAL_STRING  shift 13
	IDENT  shift 9
	BIT_NOT  shift 18
	'-'  shift 16
	'!'  shift 17
	'['  shift 14
	'('  shift 8
	'{'  shift 15
	'}'  shift 45
	.  error

	expr  goto 47
	literal  goto 3
	math  goto 4
	logic  goto 5
	bitManipulation  goto 6
	varAccess  goto 7
	exprMap  goto 46

state 16
	math:  '-'.expr 

	LITERAL_NIL  shift 10
	LITERAL_BOOL  shift 11
	LITERAL_NUMBER  shift 12
	LITERAL_STRING  shift 13
	IDENT  shift 9
	BIT_NOT  shift 18
	'-'  shift 16
	'!'  shift 17
	'['  shift 14
	'('  shift 8
	'{'  shift 15
	.  error

	expr  goto 48
	literal  goto 3
	math  goto 4
	logic  goto 5
	bitManipulation  goto 6
	varAccess  goto 7

state 17
	logic:  '!'.expr 

	LITERAL_NIL  shift 10
	LITERAL_BOOL  shift 11
	LITERAL_NUMBER  shift 12
	LITERAL_STRING  shift 13
	IDENT  shift 9
	BIT_NOT  shift 18
	'-'  shift 16
	'!'  shift 17
	'['  shift 14
	'('  shift 8
	'{'  shift 15
	.  error

	expr  goto 49
	literal  goto 3
	math  goto 4
	logic  goto 5
	bitManipulation  goto 6
	varAccess  goto 7

state 18
	bitManipulation:  BIT_NOT.expr 

	LITERAL_NIL  shift 10
	LITERAL_BOOL  shift 11
	LITERAL_NUMBER  shift 12
	LITERAL_STRING  shift 13
	IDENT  shift 9
	BIT_NOT  shift 18
	'-'  shift 16
	'!'  shift 17
	'['  shift 14
	'('  shift 8
	'{'  shift 15
	.  error

	expr  goto 50
	literal  goto 3
	math  goto 4
	logic  goto 5
	bitManipulation  goto 6
	varAccess  goto 7

state 19
	math:  expr '+'.expr 

	LITERAL_NIL  shift 10
	LITERAL_BOOL  shift 11
	LITERAL_NUMBER  shift 12
	LITERAL_STRING  shift 13
	IDENT  shift 9
	BIT_NOT  shift 18
	'-'  shift 16
	'!'  shift 17
	'['  shift 14
	'('  shift 8
	'{'  shift 15
	.  error

	expr  goto 51
	literal  goto 3
	math  goto 4
	logic  goto 5
	bitManipulation  goto 6
	varAccess  goto 7

state 20
	math:  expr '-'.expr 

	LITERAL_NIL  shift 10
	LITERAL_BOOL  shift 11
	LITERAL_NUMBER  shift 12
	LITERAL_STRING  shift 13
	IDENT  shift 9
	BIT_NOT  shift 18
	'-'  shift 16
	'!'  shift 17
	'['  shift 14
	'('  shift 8
	'{'  shift 15
	.  error

	expr  goto 52
	literal  goto 3
	math  goto 4
	logic  goto 5
	bitManipulation  goto 6
	varAccess  goto 7

state 21
	math:  expr '*'.expr 

	LITERAL_NIL  shift 10
	LITERAL_BOOL  shift 11
	LITERAL_NUMBER  shift 12
	LITERAL_STRING  shift 13
	IDENT  shift 9
	BIT_NOT  shift 18
	'-'  shift 16
	'!'  shift 17
	'['  shift 14
	'('  shift 8
	'{'  shift 15
	.  error

	expr  goto 53
	literal  goto 3
	math  goto 4
	logic  goto 5
	bitManipulation  goto 6
	varAccess  goto 7

state 22
	math:  expr '/'.expr 

	LITERAL_NIL  shift 10
	LITERAL_BOOL  shift 11
	LITERAL_NUMBER  shift 12
	LITERAL_STRING  shift 13
	IDENT  shift 9
	BIT_NOT  shift 18
	'-'  shift 16
	'!'  shift 17
	'['  shift 14
	'('  shift 8
	'{'  shift 15
	.  error

	expr  goto 54
	literal  goto 3
	math  goto 4
	logic  goto 5
	bitManipulation  goto 6
	varAccess  goto 7

state 23
	math:  expr '%'.expr 

	LITERAL_NIL  shift 10
	LITERAL_BOOL  shift 11
	LITERAL_NUMBER  shift 12
	LITERAL_STRING  shift 13
	IDENT  shift 9
	BIT_NOT  shift 18
	'-'  shift 16
	'!'  shift 17
	'['  shift 14
	'('  shift 8
	'{'  shift 15
	.  error

	expr  goto 55
	literal  goto 3
	math  goto 4
	logic  goto 5
	bitManipulation  goto 6
	varAccess  goto 7

state 24
	logic:  expr EQL.expr 

	LITERAL_NIL  shift 10
	LITERAL_BOOL  shift 11
	LITERAL_NUMBER  shift 12
	LITERAL_STRING  shift 13
	IDENT  shift 9
	BIT_NOT  shift 18
	'-'  shift 16
	'!'  shift 17
	'['  shift 14
	'('  shift 8
	'{'  shift 15
	.  error

	expr  goto 56
	literal  goto 3
	math  goto 4
	logic  goto 5
	bitManipulation  goto 6
	varAccess  goto 7

state 25
	logic:  expr NEQ.expr 

	LITERAL_NIL  shift 10
	LITERAL_BOOL  shift 11
	LITERAL_NUMBER  shift 12
	LITERAL_STRING  shift 13
	IDENT  shift 9
	BIT_NOT  shift 18
	'-'  shift 16
	'!'  shift 17
	'['  shift 14
	'('  shift 8
	'{'  shift 15
	.  error

	expr  goto 57
	literal  goto 3
	math  goto 4
	logic  goto 5
	bitManipulation  goto 6
	varAccess  goto 7

state 26
	logic:  expr LSS.expr 

	LITERAL_NIL  shift 10
	LITERAL_BOOL  shift 11
	LITERAL_NUMBER  shift 12
	LITERAL_STRING  shift 13
	IDENT  shift 9
	BIT_NOT  shift 18
	'-'  shift 16
	'!'  shift 17
	'['  shift 14
	'('  shift 8
	'{'  shift 15
	.  error

	expr  goto 58
	literal  goto 3
	math  goto 4
	logic  goto 5
	bitManipulation  goto 6
	varAccess  goto 7

state 27
	logic:  expr GTR.expr 

	LITERAL_NIL  shift 10
	LITERAL_BOOL  shift 11
	LITERAL_NUMBER  shift 12
	LITERAL_STRING  shift 13
	IDENT  shift 9
	BIT_NOT  shift 18
	'-'  shift 16
	'!'  shift 17
	'['  shift 14
	'('  shift 8
	'{'  shift 15
	.  error

	expr  goto 59
	literal  goto 3
	math  goto 4
	logic  goto 5
	bitManipulation  goto 6
	varAccess  goto 7

state 28
	logic:  expr LEQ.expr 

	LITERAL_NIL  shift 10
	LITERAL_BOOL  shift 11
	LITERAL_NUMBER  shift 12
	LITERAL_STRING  shift 13
	IDENT  shift 9
	BIT_NOT  shift 18
	'-'  shift 16
	'!'  shift 17
	'['  shift 14
	'('  shift 8
	'{'  shift 15
	.  error

	expr  goto 60
	literal  goto 3
	math  goto 4
	logic  goto 5
	bitManipulation  goto 6
	varAccess  goto 7

state 29
	logic:  expr GEQ.expr 

	LITERAL_NIL  shift 10
	LITERAL_BOOL  shift 11
	LITERAL_NUMBER  shift 12
	LITERAL_STRING  shift 13
	IDENT  shift 9
	BIT_NOT  shift 18
	'-'  shift 16
	'!'  shift 17
	'['  shift 14
	'('  shift 8
	'{'  shift 15
	.  error

	expr  goto 61
	literal  goto 3
	math  goto 4
	logic  goto 5
	bitManipulation  goto 6
	varAccess  goto 7

state 30
	logic:  expr AND.expr 

	LITERAL_NIL  shift 10
	LITERAL_BOOL  shift 11
	LITERAL_NUMBER  shift 12
	LITERAL_STRING  shift 13
	IDENT  shift 9
	BIT_NOT  shift 18
	'-'  shift 16
	'!'  shift 17
	'['  shift 14
	'('  shift 8
	'{'  shift 15
	.  error

	expr  goto 62
	literal  goto 3
	math  goto 4
	logic  goto 5
	bitManipulation  goto 6
	varAccess  goto 7

state 31
	logic:  expr OR.expr 

	LITERAL_NIL  shift 10
	LITERAL_BOOL  shift 11
	LITERAL_NUMBER  shift 12
	LITERAL_STRING  shift 13
	IDENT  shift 9
	BIT_NOT  shift 18
	'-'  shift 16
	'!'  shift 17
	'['  shift 14
	'('  shift 8
	'{'  shift 15
	.  error

	expr  goto 63
	literal  goto 3
	math  goto 4
	logic  goto 5
	bitManipulation  goto 6
	varAccess  goto 7

state 32
	bitManipulation:  expr '|'.expr 

	LITERAL_NIL  shift 10
	LITERAL_BOOL  shift 11
	LITERAL_NUMBER  shift 12
	LITERAL_STRING  shift 13
	IDENT  shift 9
	BIT_NOT  shift 18
	'-'  shift 16
	'!'  shift 17
	'['  shift 14
	'('  shift 8
	'{'  shift 15
	.  error

	expr  goto 64
	literal  goto 3
	math  goto 4
	logic  goto 5
	bitManipulation  goto 6
	varAccess  goto 7

state 33
	bitManipulation:  expr '&'.expr 

	LITERAL_NIL  shift 10
	LITERAL_BOOL  shift 11
	LITERAL_NUMBER  shift 12
	LITERAL_STRING  shift 13
	IDENT  shift 9
	BIT_NOT  shift 18
	'-'  shift 16
	'!'  shift 17
	'['  shift 14
	'('  shift 8
	'{'  shift 15
	.  error

	expr  goto 65
	literal  goto 3
	math  goto 4
	logic  goto 5
	bitManipulation  goto 6
	varAccess  goto 7

state 34
	bitManipulation:  expr '^'.expr 

	LITERAL_NIL  shift 10
	LITERAL_BOOL  shift 11
	LITERAL_NUMBER  shift 12
	LITERAL_STRING  shift 13
	IDENT  shift 9
	BIT_NOT  shift 18
	'-'  shift 16
	'!'  shift 17
	'['  shift 14
	'('  shift 8
	'{'  shift 15
	.  error

	expr  goto 66
	literal  goto 3
	math  goto 4
	logic  goto 5
	bitManipulation  goto 6
	varAccess  goto 7

state 35
	bitManipulation:  expr SHL.expr 

	LITERAL_NIL  shift 10
	LITERAL_BOOL  shift 11
	LITERAL_NUMBER  shift 12
	LITERAL_STRING  shift 13
	IDENT  shift 9
	BIT_NOT  shift 18
	'-'  shift 16
	'!'  shift 17
	'['  shift 14
	'('  shift 8
	'{'  shift 15
	.  error

	expr  goto 67
	literal  goto 3
	math  goto 4
	logic  goto 5
	bitManipulation  goto 6
	varAccess  goto 7

state 36
	bitManipulation:  expr SHR.expr 

	LITERAL_NIL  shift 10
	LITERAL_BOOL  shift 11
	LITERAL_NUMBER  shift 12
	LITERAL_STRING  shift 13
	IDENT  shift 9
	BIT_NOT  shift 18
	'-'  shift 16
	'!'  shift 17
	'['  shift 14
	'('  shift 8
	'{'  shift 15
	.  error

	expr  goto 68
	literal  goto 3
	math  goto 4
	logic  goto 5
	bitManipulation  goto 6
	varAccess  goto 7

state 37
	varAccess:  expr '.'.IDENT 

	IDENT  shift 69
	.  error


state 38
	varAccess:  expr '['.expr ']' 
	varAccess:  expr '['.expr ':' expr ']' 
	varAccess:  expr '['.':' expr ']' 
	varAccess:  expr '['.expr ':' ']' 
	varAccess:  expr '['.':' ']' 

	LITERAL_NIL  shift 10
	LITERAL_BOOL  shift 11
	LITERAL_NUMBER  shift 12
	LITERAL_STRING  shift 13
	IDENT  shift 9
	BIT_NOT  shift 18
	'-'  shift 16
	'!'  shift 17
	'['  shift 14
	'('  shift 8
	'{'  shift 15
	':'  shift 71
	.  error

	expr  goto 70
	literal  goto 3
	math  goto 4
	logic  goto 5
	bitManipulation  goto 6
	varAccess  goto 7

state 39
	varAccess:  expr IN.expr 

	LITERAL_NIL  shift 10
	LITERAL_BOOL  shift 11
	LITERAL_NUMBER  shift 12
	LITERAL_STRING  shift 13
	IDENT  shift 9
	BIT_NOT  shift 18
	'-'  shift 16
	'!'  shift 17
	'['  shift 14
	'('  shift 8
	'{'  shift 15
	.  error

	expr  goto 72
	literal  goto 3
	math  goto 4
	logic  goto 5
	bitManipulation  goto 6
	varAccess  goto 7

state 40
	expr:  '(' expr.')' 
	math:  expr.'+' expr 
	math:  expr.'-' expr 
	math:  expr.'*' expr 
	math:  expr.'/' expr 
	math:  expr.'%' expr 
	logic:  expr.EQL expr 
	logic:  expr.NEQ expr 
	logic:  expr.LSS expr 
	logic:  expr.GTR expr 
	logic:  expr.LEQ expr 
	logic:  expr.GEQ expr 
	logic:  expr.AND expr 
	logic:  expr.OR expr 
	bitManipulation:  expr.'|' expr 
	bitManipulation:  expr.'&' expr 
	bitManipulation:  expr.'^' expr 
	bitManipulation:  expr.SHL expr 
	bitManipulation:  expr.SHR expr 
	varAccess:  expr.'.' IDENT 
	varAccess:  expr.'[' expr ']' 
	varAccess:  expr.IN expr 
	varAccess:  expr.'[' expr ':' expr ']' 
	varAccess:  expr.'[' ':' expr ']' 
	varAccess:  expr.'[' expr ':' ']' 
	varAccess:  expr.'[' ':' ']' 

	AND  shift 30
	OR  shift 31
	EQL  shift 24
	NEQ  shift 25
	LSS  shift 26
	GTR  shift 27
	LEQ  shift 28
	GEQ  shift 29
	SHL  shift 35
	SHR  shift 36
	IN  shift 39
	'|'  shift 32
	'^'  shift 34
	'&'  shift 33
	'+'  shift 19
	'-'  shift 20
	'*'  shift 21
	'/'  shift 22
	'%'  shift 23
	'.'  shift 37
	'['  shift 38
	')'  shift 73
	.  error


state 41
	expr:  IDENT '('.')' 
	expr:  IDENT '('.exprList ')' 

	LITERAL_NIL  shift 10
	LITERAL_BOOL  shift 11
	LITERAL_NUMBER  shift 12
	LITERAL_STRING  shift 13
	IDENT  shift 9
	BIT_NOT  shift 18
	'-'  shift 16
	'!'  shift 17
	'['  shift 14
	'('  shift 8
	')'  shift 74
	'{'  shift 15
	.  error

	expr  goto 44
	literal  goto 3
	math  goto 4
	logic  goto 5
	bitManipulation  goto 6
	varAccess  goto 7
	exprList  goto 75

state 42
	literal:  '[' ']'.    (14)

	.  reduce 14 (src line 86)


state 43
	literal:  '[' exprList.']' 
	exprList:  exprList.',' expr 

	']'  shift 76
	','  shift 77
	.  error


state 44
	math:  expr.'+' expr 
	math:  expr.'-' expr 
	math:  expr.'*' expr 
	math:  expr.'/' expr 
	math:  expr.'%' expr 
	logic:  expr.EQL expr 
	logic:  expr.NEQ expr 
	logic:  expr.LSS expr 
	logic:  expr.GTR expr 
	logic:  expr.LEQ expr 
	logic:  expr.GEQ expr 
	logic:  expr.AND expr 
	logic:  expr.OR expr 
	bitManipulation:  expr.'|' expr 
	bitManipulation:  expr.'&' expr 
	bitManipulation:  expr.'^' expr 
	bitManipulation:  expr.SHL expr 
	bitManipulation:  expr.SHR expr 
	varAccess:  expr.'.' IDENT 
	varAccess:  expr.'[' expr ']' 
	varAccess:  expr.IN expr 
	varAccess:  expr.'[' expr ':' expr ']' 
	varAccess:  expr.'[' ':' expr ']' 
	varAccess:  expr.'[' expr ':' ']' 
	varAccess:  expr.'[' ':' ']' 
	exprList:  expr.    (47)

	AND  shift 30
	OR  shift 31
	EQL  shift 24
	NEQ  shift 25
	LSS  shift 26
	GTR  shift 27
	LEQ  shift 28
	GEQ  shift 29
	SHL  shift 35
	SHR  shift 36
	IN  shift 39
	'|'  shift 32
	'^'  shift 34
	'&'  shift 33
	'+'  shift 19
	'-'  shift 20
	'*'  shift 21
	'/'  shift 22
	'%'  shift 23
	'.'  shift 37
	'['  shift 38
	.  reduce 47 (src line 133)


state 45
	literal:  '{' '}'.    (16)

	.  reduce 16 (src line 88)


state 46
	literal:  '{' exprMap.'}' 
	exprMap:  exprMap.',' expr ':' expr 

	'}'  shift 78
	','  shift 79
	.  error


state 47
	math:  expr.'+' expr 
	math:  expr.'-' expr 
	math:  expr.'*' expr 
	math:  expr.'/' expr 
	math:  expr.'%' expr 
	logic:  expr.EQL expr 
	logic:  expr.NEQ expr 
	logic:  expr.LSS expr 
	logic:  expr.GTR expr 
	logic:  expr.LEQ expr 
	logic:  expr.GEQ expr 
	logic:  expr.AND expr 
	logic:  expr.OR expr 
	bitManipulation:  expr.'|' expr 
	bitManipulation:  expr.'&' expr 
	bitManipulation:  expr.'^' expr 
	bitManipulation:  expr.SHL expr 
	bitManipulation:  expr.SHR expr 
	varAccess:  expr.'.' IDENT 
	varAccess:  expr.'[' expr ']' 
	varAccess:  expr.IN expr 
	varAccess:  expr.'[' expr ':' expr ']' 
	varAccess:  expr.'[' ':' expr ']' 
	varAccess:  expr.'[' expr ':' ']' 
	varAccess:  expr.'[' ':' ']' 
	exprMap:  expr.':' expr 

	AND  shift 30
	OR  shift 31
	EQL  shift 24
	NEQ  shift 25
	LSS  shift 26
	GTR  shift 27
	LEQ  shift 28
	GEQ  shift 29
	SHL  shift 35
	SHR  shift 36
	IN  shift 39
	'|'  shift 32
	'^'  shift 34
	'&'  shift 33
	'+'  shift 19
	'-'  shift 20
	'*'  shift 21
	'/'  shift 22
	'%'  shift 23
	'.'  shift 37
	'['  shift 38
	':'  shift 80
	.  error


state 48
	math:  '-' expr.    (18)
	math:  expr.'+' expr 
	math:  expr.'-' expr 
	math:  expr.'*' expr 
	math:  expr.'/' expr 
	math:  expr.'%' expr 
	logic:  expr.EQL expr 
	logic:  expr.NEQ expr 
	logic:  expr.LSS expr 
	logic:  expr.GTR expr 
	logic:  expr.LEQ expr 
	logic:  expr.GEQ expr 
	logic:  expr.AND expr 
	logic:  expr.OR expr 
	bitManipulation:  expr.'|' expr 
	bitManipulation:  expr.'&' expr 
	bitManipulation:  expr.'^' expr 
	bitManipulation:  expr.SHL expr 
	bitManipulation:  expr.SHR expr 
	varAccess:  expr.'.' IDENT 
	varAccess:  expr.'[' expr ']' 
	varAccess:  expr.IN expr 
	varAccess:  expr.'[' expr ':' expr ']' 
	varAccess:  expr.'[' ':' expr ']' 
	varAccess:  expr.'[' expr ':' ']' 
	varAccess:  expr.'[' ':' ']' 

	IN  shift 39
	'.'  shift 37
	'['  shift 38
	.  reduce 18 (src line 92)


state 49
	math:  expr.'+' expr 
	math:  expr.'-' expr 
	math:  expr.'*' expr 
	math:  expr.'/' expr 
	math:  expr.'%' expr 
	logic:  '!' expr.    (24)
	logic:  expr.EQL expr 
	logic:  expr.NEQ expr 
	logic:  expr.LSS expr 
	logic:  expr.GTR expr 
	logic:  expr.LEQ expr 
	logic:  expr.GEQ expr 
	logic:  expr.AND expr 
	logic:  expr.OR expr 
	bitManipulation:  expr.'|' expr 
	bitManipulation:  expr.'&' expr 
	bitManipulation:  expr.'^' expr 
	bitManipulation:  expr.SHL expr 
	bitManipulation:  expr.SHR expr 
	varAccess:  expr.'.' IDENT 
	varAccess:  expr.'[' expr ']' 
	varAccess:  expr.IN expr 
	varAccess:  expr.'[' expr ':' expr ']' 
	varAccess:  expr.'[' ':' expr ']' 
	varAccess:  expr.'[' expr ':' ']' 
	varAccess:  expr.'[' ':' ']' 

	IN  shift 39
	'.'  shift 37
	'['  shift 38
	.  reduce 24 (src line 101)


state 50
	math:  expr.'+' expr 
	math:  expr.'-' expr 
	math:  expr.'*' expr 
	math:  expr.'/' expr 
	math:  expr.'%' expr 
	logic:  expr.EQL expr 
	logic:  expr.NEQ expr 
	logic:  expr.LSS expr 
	logic:  expr.GTR expr 
	logic:  expr.LEQ expr 
	logic:  expr.GEQ expr 
	logic:  expr.AND expr 
	logic:  expr.OR expr 
	bitManipulation:  expr.'|' expr 
	bitManipulation:  expr.'&' expr 
	bitManipulation:  expr.'^' expr 
	bitManipulation:  expr.SHL expr 
	bitManipulation:  expr.SHR expr 
	bitManipulation:  BIT_NOT expr.    (38)
	varAccess:  expr.'.' IDENT 
	varAccess:  expr.'[' expr ']' 
	varAccess:  expr.IN expr 
	varAccess:  expr.'[' expr ':' expr ']' 
	varAccess:  expr.'[' ':' expr ']' 
	varAccess:  expr.'[' expr ':' ']' 
	varAccess:  expr.'[' ':' ']' 

	IN  shift 39
	'.'  shift 37
	'['  shift 38
	.  reduce 38 (src line 119)


state 51
	math:  expr.'+' expr 
	math:  expr '+' expr.    (19)
	math:  expr.'-' expr 
	math:  expr.'*' expr 
	math:  expr.'/' expr 
	math:  expr.'%' expr 
	logic:  expr.EQL expr 
	logic:  expr.NEQ expr 
	logic:  expr.LSS expr 
	logic:  expr.GTR expr 
	logic:  expr.LEQ expr 
	logic:  expr.GEQ expr 
	logic:  expr.AND expr 
	logic:  expr.OR expr 
	bitManipulation:  expr.'|' expr 
	bitManipulation:  expr.'&' expr 
	bitManipulation:  expr.'^' expr 
	bitManipulation:  expr.SHL expr 
	bitManipulation:  expr.SHR expr 
	varAccess:  expr.'.' IDENT 
	varAccess:  expr.'[' expr ']' 
	varAccess:  expr.IN expr 
	varAccess:  expr.'[' expr ':' expr ']' 
	varAccess:  expr.'[' ':' expr ']' 
	varAccess:  expr.'[' expr ':' ']' 
	varAccess:  expr.'[' ':' ']' 

	IN  shift 39
	'*'  shift 21
	'/'  shift 22
	'%'  shift 23
	'.'  shift 37
	'['  shift 38
	.  reduce 19 (src line 94)


state 52
	math:  expr.'+' expr 
	math:  expr.'-' expr 
	math:  expr '-' expr.    (20)
	math:  expr.'*' expr 
	math:  expr.'/' expr 
	math:  expr.'%' expr 
	logic:  expr.EQL expr 
	logic:  expr.NEQ expr 
	logic:  expr.LSS expr 
	logic:  expr.GTR expr 
	logic:  expr.LEQ expr 
	logic:  expr.GEQ expr 
	logic:  expr.AND expr 
	logic:  expr.OR expr 
	bitManipulation:  expr.'|' expr 
	bitManipulation:  expr.'&' expr 
	bitManipulation:  expr.'^' expr 
	bitManipulation:  expr.SHL expr 
	bitManipulation:  expr.SHR expr 
	varAccess:  expr.'.' IDENT 
	varAccess:  expr.'[' expr ']' 
	varAccess:  expr.IN expr 
	varAccess:  expr.'[' expr ':' expr ']' 
	varAccess:  expr.'[' ':' expr ']' 
	varAccess:  expr.'[' expr ':' ']' 
	varAccess:  expr.'[' ':' ']' 

	IN  shift 39
	'*'  shift 21
	'/'  shift 22
	'%'  shift 23
	'.'  shift 37
	'['  shift 38
	.  reduce 20 (src line 95)


state 53
	math:  expr.'+' expr 
	math:  expr.'-' expr 
	math:  expr.'*' expr 
	math:  expr '*' expr.    (21)
	math:  expr.'/' expr 
	math:  expr.'%' expr 
	logic:  expr.EQL expr 
	logic:  expr.NEQ expr 
	logic:  expr.LSS expr 
	logic:  expr.GTR expr 
	logic:  expr.LEQ expr 
	logic:  expr.GEQ expr 
	logic:  expr.AND expr 
	logic:  expr.OR expr 
	bitManipulation:  expr.'|' expr 
	bitManipulation:  expr.'&' expr 
	bitManipulation:  expr.'^' expr 
	bitManipulation:  expr.SHL expr 
	bitManipulation:  expr.SHR expr 
	varAccess:  expr.'.' IDENT 
	varAccess:  expr.'[' expr ']' 
	varAccess:  expr.IN expr 
	varAccess:  expr.'[' expr ':' expr ']' 
	varAccess:  expr.'[' ':' expr ']' 
	varAccess:  expr.'[' expr ':' ']' 
	varAccess:  expr.'[' ':' ']' 

	IN  shift 39
	'.'  shift 37
	'['  shift 38
	.  reduce 21 (src line 96)


state 54
	math:  expr.'+' expr 
	math:  expr.'-' expr 
	math:  expr.'*' expr 
	math:  expr.'/' expr 
	math:  expr '/' expr.    (22)
	math:  expr.'%' expr 
	logic:  expr.EQL expr 
	logic:  expr.NEQ expr 
	logic:  expr.LSS expr 
	logic:  expr.GTR expr 
	logic:  expr.LEQ expr 
	logic:  expr.GEQ expr 
	logic:  expr.AND expr 
	logic:  expr.OR expr 
	bitManipulation:  expr.'|' expr 
	bitManipulation:  expr.'&' expr 
	bitManipulation:  expr.'^' expr 
	bitManipulation:  expr.SHL expr 
	bitManipulation:  expr.SHR expr 
	varAccess:  expr.'.' IDENT 
	varAccess:  expr.'[' expr ']' 
	varAccess:  expr.IN expr 
	varAccess:  expr.'[' expr ':' expr ']' 
	varAccess:  expr.'[' ':' expr ']' 
	varAccess:  expr.'[' expr ':' ']' 
	varAccess:  expr.'[' ':' ']' 

	IN  shift 39
	'.'  shift 37
	'['  shift 38
	.  reduce 22 (src line 97)


state 55
	math:  expr.'+' expr 
	math:  expr.'-' expr 
	math:  expr.'*' expr 
	math:  expr.'/' expr 
	math:  expr.'%' expr 
	math:  expr '%' expr.    (23)
	logic:  expr.EQL expr 
	logic:  expr.NEQ expr 
	logic:  expr.LSS expr 
	logic:  expr.GTR expr 
	logic:  expr.LEQ expr 
	logic:  expr.GEQ expr 
	logic:  expr.AND expr 
	logic:  expr.OR expr 
	bitManipulation:  expr.'|' expr 
	bitManipulation:  expr.'&' expr 
	bitManipulation:  expr.'^' expr 
	bitManipulation:  expr.SHL expr 
	bitManipulation:  expr.SHR expr 
	varAccess:  expr.'.' IDENT 
	varAccess:  expr.'[' expr ']' 
	varAccess:  expr.IN expr 
	varAccess:  expr.'[' expr ':' expr ']' 
	varAccess:  expr.'[' ':' expr ']' 
	varAccess:  expr.'[' expr ':' ']' 
	varAccess:  expr.'[' ':' ']' 

	IN  shift 39
	'.'  shift 37
	'['  shift 38
	.  reduce 23 (src line 98)


state 56
	math:  expr.'+' expr 
	math:  expr.'-' expr 
	math:  expr.'*' expr 
	math:  expr.'/' expr 
	math:  expr.'%' expr 
	logic:  expr.EQL expr 
	logic:  expr EQL expr.    (25)
	logic:  expr.NEQ expr 
	logic:  expr.LSS expr 
	logic:  expr.GTR expr 
	logic:  expr.LEQ expr 
	logic:  expr.GEQ expr 
	logic:  expr.AND expr 
	logic:  expr.OR expr 
	bitManipulation:  expr.'|' expr 
	bitManipulation:  expr.'&' expr 
	bitManipulation:  expr.'^' expr 
	bitManipulation:  expr.SHL expr 
	bitManipulation:  expr.SHR expr 
	varAccess:  expr.'.' IDENT 
	varAccess:  expr.'[' expr ']' 
	varAccess:  expr.IN expr 
	varAccess:  expr.'[' expr ':' expr ']' 
	varAccess:  expr.'[' ':' expr ']' 
	varAccess:  expr.'[' expr ':' ']' 
	varAccess:  expr.'[' ':' ']' 

	LSS  shift 26
	GTR  shift 27
	LEQ  shift 28
	GEQ  shift 29
	SHL  shift 35
	SHR  shift 36
	IN  shift 39
	'+'  shift 19
	'-'  shift 20
	'*'  shift 21
	'/'  shift 22
	'%'  shift 23
	'.'  shift 37
	'['  shift 38
	.  reduce 25 (src line 103)


state 57
	math:  expr.'+' expr 
	math:  expr.'-' expr 
	math:  expr.'*' expr 
	math:  expr.'/' expr 
	math:  expr.'%' expr 
	logic:  expr.EQL expr 
	logic:  expr.NEQ expr 
	logic:  expr NEQ expr.    (26)
	logic:  expr.LSS expr 
	logic:  expr.GTR expr 
	logic:  expr.LEQ expr 
	logic:  expr.GEQ expr 
	logic:  expr.AND expr 
	logic:  expr.OR expr 
	bitManipulation:  expr.'|' expr 
	bitManipulation:  expr.'&' expr 
	bitManipulation:  expr.'^' expr 
	bitManipulation:  expr.SHL expr 
	bitManipulation:  expr.SHR expr 
	varAccess:  expr.'.' IDENT 
	varAccess:  expr.'[' expr ']' 
	varAccess:  expr.IN expr 
	varAccess:  expr.'[' expr ':' expr ']' 
	varAccess:  expr.'[' ':' expr ']' 
	varAccess:  expr.'[' expr ':' ']' 
	varAccess:  expr.'[' ':' ']' 

	LSS  shift 26
	GTR  shift 27
	LEQ  shift 28
	GEQ  shift 29
	SHL  shift 35
	SHR  shift 36
	IN  shift 39
	'+'  shift 19
	'-'  shift 20
	'*'  shift 21
	'/'  shift 22
	'%'  shift 23
	'.'  shift 37
	'['  shift 38
	.  reduce 26 (src line 104)


state 58
	math:  expr.'+' expr 
	math:  expr.'-' expr 
	math:  expr.'*' expr 
	math:  expr.'/' expr 
	math:  expr.'%' expr 
	logic:  expr.EQL expr 
	logic:  expr.NEQ expr 
	logic:  expr.LSS expr 
	logic:  expr LSS expr.    (27)
	logic:  expr.GTR expr 
	logic:  expr.LEQ expr 
	logic:  expr.GEQ expr 
	logic:  expr.AND expr 
	logic:  expr.OR expr 
	bitManipulation:  expr.'|' expr 
	bitManipulation:  expr.'&' expr 
	bitManipulation:  expr.'^' expr 
	bitManipulation:  expr.SHL expr 
	bitManipulation:  expr.SHR expr 
	varAccess:  expr.'.' IDENT 
	varAccess:  expr.'[' expr ']' 
	varAccess:  expr.IN expr 
	varAccess:  expr.'[' expr ':' expr ']' 
	varAccess:  expr.'[' ':' expr ']' 
	varAccess:  expr.'[' expr ':' ']' 
	varAccess:  expr.'[' ':' ']' 

	SHL  shift 35
	SHR  shift 36
	IN  shift 39
	'+'  shift 19
	'-'  shift 20
	'*'  shift 21
	'/'  shift 22
	'%'  shift 23
	'.'  shift 37
	'['  shift 38
	.  reduce 27 (src line 105)


state 59
	math:  expr.'+' expr 
	math:  expr.'-' expr 
	math:  expr.'*' expr 
	math:  expr.'/' expr 
	math:  expr.'%' expr 
	logic:  expr.EQL expr 
	logic:  expr.NEQ expr 
	logic:  expr.LSS expr 
	logic:  expr.GTR expr 
	logic:  expr GTR expr.    (28)
	logic:  expr.LEQ expr 
	logic:  expr.GEQ expr 
	logic:  expr.AND expr 
	logic:  expr.OR expr 
	bitManipulation:  expr.'|' expr 
	bitManipulation:  expr.'&' expr 
	bitManipulation:  expr.'^' expr 
	bitManipulation:  expr.SHL expr 
	bitManipulation:  expr.SHR expr 
	varAccess:  expr.'.' IDENT 
	varAccess:  expr.'[' expr ']' 
	varAccess:  expr.IN expr 
	varAccess:  expr.'[' expr ':' expr ']' 
	varAccess:  expr.'[' ':' expr ']' 
	varAccess:  expr.'[' expr ':' ']' 
	varAccess:  expr.'[' ':' ']' 

	SHL  shift 35
	SHR  shift 36
	IN  shift 39
	'+'  shift 19
	'-'  shift 20
	'*'  shift 21
	'/'  shift 22
	'%'  shift 23
	'.'  shift 37
	'['  shift 38
	.  reduce 28 (src line 106)


state 60
	math:  expr.'+' expr 
	math:  expr.'-' expr 
	math:  expr.'*' expr 
	math:  expr.'/' expr 
	math:  expr.'%' expr 
	logic:  expr.EQL expr 
	logic:  expr.NEQ expr 
	logic:  expr.LSS expr 
	logic:  expr.GTR expr 
	logic:  expr.LEQ expr 
	logic:  expr LEQ expr.    (29)
	logic:  expr.GEQ expr 
	logic:  expr.AND expr 
	logic:  expr.OR expr 
	bitManipulation:  expr.'|' expr 
	bitManipulation:  expr.'&' expr 
	bitManipulation:  expr.'^' expr 
	bitManipulation:  expr.SHL expr 
	bitManipulation:  expr.SHR expr 
	varAccess:  expr.'.' IDENT 
	varAccess:  expr.'[' expr ']' 
	varAccess:  expr.IN expr 
	varAccess:  expr.'[' expr ':' expr ']' 
	varAccess:  expr.'[' ':' expr ']' 
	varAccess:  expr.'[' expr ':' ']' 
	varAccess:  expr.'[' ':' ']' 

	SHL  shift 35
	SHR  shift 36
	IN  shift 39
	'+'  shift 19
	'-'  shift 20
	'*'  shift 21
	'/'  shift 22
	'%'  shift 23
	'.'  shift 37
	'['  shift 38
	.  reduce 29 (src line 107)


state 61
	math:  expr.'+' expr 
	math:  expr.'-' expr 
	math:  expr.'*' expr 
	math:  expr.'/' expr 
	math:  expr.'%' expr 
	logic:  expr.EQL expr 
	logic:  expr.NEQ expr 
	logic:  expr.LSS expr 
	logic:  expr.GTR expr 
	logic:  expr.LEQ expr 
	logic:  expr.GEQ expr 
	logic:  expr GEQ expr.    (30)
	logic:  expr.AND expr 
	logic:  expr.OR expr 
	bitManipulation:  expr.'|' expr 
	bitManipulation:  expr.'&' expr 
	bitManipulation:  expr.'^' expr 
	bitManipulation:  expr.SHL expr 
	bitManipulation:  expr.SHR expr 
	varAccess:  expr.'.' IDENT 
	varAccess:  expr.'[' expr ']' 
	varAccess:  expr.IN expr 
	varAccess:  expr.'[' expr ':' expr ']' 
	varAccess:  expr.'[' ':' expr ']' 
	varAccess:  expr.'[' expr ':' ']' 
	varAccess:  expr.'[' ':' ']' 

	SHL  shift 35
	SHR  shift 36
	IN  shift 39
	'+'  shift 19
	'-'  shift 20
	'*'  shift 21
	'/'  shift 22
	'%'  shift 23
	'.'  shift 37
	'['  shift 38
	.  reduce 30 (src line 108)


state 62
	math:  expr.'+' expr 
	math:  expr.'-' expr 
	math:  expr.'*' expr 
	math:  expr.'/' expr 
	math:  expr.'%' expr 
	logic:  expr.EQL expr 
	logic:  expr.NEQ expr 
	logic:  expr.LSS expr 
	logic:  expr.GTR expr 
	logic:  expr.LEQ expr 
	logic:  expr.GEQ expr 
	logic:  expr.AND expr 
	logic:  expr AND expr.    (31)
	logic:  expr.OR expr 
	bitManipulation:  expr.'|' expr 
	bitManipulation:  expr.'&' expr 
	bitManipulation:  expr.'^' expr 
	bitManipulation:  expr.SHL expr 
	bitManipulation:  expr.SHR expr 
	varAccess:  expr.'.' IDENT 
	varAccess:  expr.'[' expr ']' 
	varAccess:  expr.IN expr 
	varAccess:  expr.'[' expr ':' expr ']' 
	varAccess:  expr.'[' ':' expr ']' 
	varAccess:  expr.'[' expr ':' ']' 
	varAccess:  expr.'[' ':' ']' 

	EQL  shift 24
	NEQ  shift 25
	LSS  shift 26
	GTR  shift 27
	LEQ  shift 28
	GEQ  shift 29
	SHL  shift 35
	SHR  shift 36
	IN  shift 39
	'|'  shift 32
	'^'  shift 34
	'&'  shift 33
	'+'  shift 19
	'-'  shift 20
	'*'  shift 21
	'/'  shift 22
	'%'  shift 23
	'.'  shift 37
	'['  shift 38
	.  reduce 31 (src line 109)


state 63
	math:  expr.'+' expr 
	math:  expr.'-' expr 
	math:  expr.'*' expr 
	math:  expr.'/' expr 
	math:  expr.'%' expr 
	logic:  expr.EQL expr 
	logic:  expr.NEQ expr 
	logic:  expr.LSS expr 
	logic:  expr.GTR expr 
	logic:  expr.LEQ expr 
	logic:  expr.GEQ expr 
	logic:  expr.AND expr 
	logic:  expr.OR expr 
	logic:  expr OR expr.    (32)
	bitManipulation:  expr.'|' expr 
	bitManipulation:  expr.'&' expr 
	bitManipulation:  expr.'^' expr 
	bitManipulation:  expr.SHL expr 
	bitManipulation:  expr.SHR expr 
	varAccess:  expr.'.' IDENT 
	varAccess:  expr.'[' expr ']' 
	varAccess:  expr.IN expr 
	varAccess:  expr.'[' expr ':' expr ']' 
	varAccess:  expr.'[' ':' expr ']' 
	varAccess:  expr.'[' expr ':' ']' 
	varAccess:  expr.'[' ':' ']' 

	AND  shift 30
	EQL  shift 24
	NEQ  shift 25
	LSS  shift 26
	GTR  shift 27
	LEQ  shift 28
	GEQ  shift 29
	SHL  shift 35
	SHR  shift 36
	IN  shift 39
	'|'  shift 32
	'^'  shift 34
	'&'  shift 33
	'+'  shift 19
	'-'  shift 20
	'*'  shift 21
	'/'  shift 22
	'%'  shift 23
	'.'  shift 37
	'['  shift 38
	.  reduce 32 (src line 110)


state 64
	math:  expr.'+' expr 
	math:  expr.'-' expr 
	math:  expr.'*' expr 
	math:  expr.'/' expr 
	math:  expr.'%' expr 
	logic:  expr.EQL expr 
	logic:  expr.NEQ expr 
	logic:  expr.LSS expr 
	logic:  expr.GTR expr 
	logic:  expr.LEQ expr 
	logic:  expr.GEQ expr 
	logic:  expr.AND expr 
	logic:  expr.OR expr 
	bitManipulation:  expr.'|' expr 
	bitManipulation:  expr '|' expr.    (33)
	bitManipulation:  expr.'&' expr 
	bitManipulation:  expr.'^' expr 
	bitManipulation:  expr.SHL expr 
	bitManipulation:  expr.SHR expr 
	varAccess:  expr.'.' IDENT 
	varAccess:  expr.'[' expr ']' 
	varAccess:  expr.IN expr 
	varAccess:  expr.'[' expr ':' expr ']' 
	varAccess:  expr.'[' ':' expr ']' 
	varAccess:  expr.'[' expr ':' ']' 
	varAccess:  expr.'[' ':' ']' 

	EQL  shift 24
	NEQ  shift 25
	LSS  shift 26
	GTR  shift 27
	LEQ  shift 28
	GEQ  shift 29
	SHL  shift 35
	SHR  shift 36
	IN  shift 39
	'^'  shift 34
	'&'  shift 33
	'+'  shift 19
	'-'  shift 20
	'*'  shift 21
	'/'  shift 22
	'%'  shift 23
	'.'  shift 37
	'['  shift 38
	.  reduce 33 (src line 113)


state 65
	math:  expr.'+' expr 
	math:  expr.'-' expr 
	math:  expr.'*' expr 
	math:  expr.'/' expr 
	math:  expr.'%' expr 
	logic:  expr.EQL expr 
	logic:  expr.NEQ expr 
	logic:  expr.LSS expr 
	logic:  expr.GTR expr 
	logic:  expr.LEQ expr 
	logic:  expr.GEQ expr 
	logic:  expr.AND expr 
	logic:  expr.OR expr 
	bitManipulation:  expr.'|' expr 
	bitManipulation:  expr.'&' expr 
	bitManipulation:  expr '&' expr.    (34)
	bitManipulation:  expr.'^' expr 
	bitManipulation:  expr.SHL expr 
	bitManipulation:  expr.SHR expr 
	varAccess:  expr.'.' IDENT 
	varAccess:  expr.'[' expr ']' 
	varAccess:  expr.IN expr 
	varAccess:  expr.'[' expr ':' expr ']' 
	varAccess:  expr.'[' ':' expr ']' 
	varAccess:  expr.'[' expr ':' ']' 
	varAccess:  expr.'[' ':' ']' 

	EQL  shift 24
	NEQ  shift 25
	LSS  shift 26
	GTR  shift 27
	LEQ  shift 28
	GEQ  shift 29
	SHL  shift 35
	SHR  shift 36
	IN  shift 39
	'+'  shift 19
	'-'  shift 20
	'*'  shift 21
	'/'  shift 22
	'%'  shift 23
	'.'  shift 37
	'['  shift 38
	.  reduce 34 (src line 115)


state 66
	math:  expr.'+' expr 
	math:  expr.'-' expr 
	math:  expr.'*' expr 
	math:  expr.'/' expr 
	math:  expr.'%' expr 
	logic:  expr.EQL expr 
	logic:  expr.NEQ expr 
	logic:  expr.LSS expr 
	logic:  expr.GTR expr 
	logic:  expr.LEQ expr 
	logic:  expr.GEQ expr 
	logic:  expr.AND expr 
	logic:  expr.OR expr 
	bitManipulation:  expr.'|' expr 
	bitManipulation:  expr.'&' expr 
	bitManipulation:  expr.'^' expr 
	bitManipulation:  expr '^' expr.    (35)
	bitManipulation:  expr.SHL expr 
	bitManipulation:  expr.SHR expr 
	varAccess:  expr.'.' IDENT 
	varAccess:  expr.'[' expr ']' 
	varAccess:  expr.IN expr 
	varAccess:  expr.'[' expr ':' expr ']' 
	varAccess:  expr.'[' ':' expr ']' 
	varAccess:  expr.'[' expr ':' ']' 
	varAccess:  expr.'[' ':' ']' 

	EQL  shift 24
	NEQ  shift 25
	LSS  shift 26
	GTR  shift 27
	LEQ  shift 28
	GEQ  shift 29
	SHL  shift 35
	SHR  shift 36
	IN  shift 39
	'&'  shift 33
	'+'  shift 19
	'-'  shift 20
	'*'  shift 21
	'/'  shift 22
	'%'  shift 23
	'.'  shift 37
	'['  shift 38
	.  reduce 35 (src line 116)


state 67
	math:  expr.'+' expr 
	math:  expr.'-' expr 
	math:  expr.'*' expr 
	math:  expr.'/' expr 
	math:  expr.'%' expr 
	logic:  expr.EQL expr 
	logic:  expr.NEQ expr 
	logic:  expr.LSS expr 
	logic:  expr.GTR expr 
	logic:  expr.LEQ expr 
	logic:  expr.GEQ expr 
	logic:  expr.AND expr 
	logic:  expr.OR expr 
	bitManipulation:  expr.'|' expr 
	bitManipulation:  expr.'&' expr 
	bitManipulation:  expr.'^' expr 
	bitManipulation:  expr.SHL expr 
	bitManipulation:  expr SHL expr.    (36)
	bitManipulation:  expr.SHR expr 
	varAccess:  expr.'.' IDENT 
	varAccess:  expr.'[' expr ']' 
	varAccess:  expr.IN expr 
	varAccess:  expr.'[' expr ':' expr ']' 
	varAccess:  expr.'[' ':' expr ']' 
	varAccess:  expr.'[' expr ':' ']' 
	varAccess:  expr.'[' ':' ']' 

	IN  shift 39
	'+'  shift 19
	'-'  shift 20
	'*'  shift 21
	'/'  shift 22
	'%'  shift 23
	'.'  shift 37
	'['  shift 38
	.  reduce 36 (src line 117)


state 68
	math:  expr.'+' expr 
	math:  expr.'-' expr 
	math:  expr.'*' expr 
	math:  expr.'/' expr 
	math:  expr.'%' expr 
	logic:  expr.EQL expr 
	logic:  expr.NEQ expr 
	logic:  expr.LSS expr 
	logic:  expr.GTR expr 
	logic:  expr.LEQ expr 
	logic:  expr.GEQ expr 
	logic:  expr.AND expr 
	logic:  expr.OR expr 
	bitManipulation:  expr.'|' expr 
	bitManipulation:  expr.'&' expr 
	bitManipulation:  expr.'^' expr 
	bitManipulation:  expr.SHL expr 
	bitManipulation:  expr.SHR expr 
	bitManipulation:  expr SHR expr.    (37)
	varAccess:  expr.'.' IDENT 
	varAccess:  expr.'[' expr ']' 
	varAccess:  expr.IN expr 
	varAccess:  expr.'[' expr ':' expr ']' 
	varAccess:  expr.'[' ':' expr ']' 
	varAccess:  expr.'[' expr ':' ']' 
	varAccess:  expr.'[' ':' ']' 

	IN  shift 39
	'+'  shift 19
	'-'  shift 20
	'*'  shift 21
	'/'  shift 22
	'%'  shift 23
	'.'  shift 37
	'['  shift 38
	.  reduce 37 (src line 118)


state 69
	varAccess:  expr '.' IDENT.    (40)

	.  reduce 40 (src line 124)


state 70
	math:  expr.'+' expr 
	math:  expr.'-' expr 
	math:  expr.'*' expr 
	math:  expr.'/' expr 
	math:  expr.'%' expr 
	logic:  expr.EQL expr 
	logic:  expr.NEQ expr 
	logic:  expr.LSS expr 
	logic:  expr.GTR expr 
	logic:  expr.LEQ expr 
	logic:  expr.GEQ expr 
	logic:  expr.AND expr 
	logic:  expr.OR expr 
	bitManipulation:  expr.'|' expr 
	bitManipulation:  expr.'&' expr 
	bitManipulation:  expr.'^' expr 
	bitManipulation:  expr.SHL expr 
	bitManipulation:  expr.SHR expr 
	varAccess:  expr.'.' IDENT 
	varAccess:  expr.'[' expr ']' 
	varAccess:  expr '[' expr.']' 
	varAccess:  expr.IN expr 
	varAccess:  expr.'[' expr ':' expr ']' 
	varAccess:  expr '[' expr.':' expr ']' 
	varAccess:  expr.'[' ':' expr ']' 
	varAccess:  expr.'[' expr ':' ']' 
	varAccess:  expr '[' expr.':' ']' 
	varAccess:  expr.'[' ':' ']' 

	AND  shift 30
	OR  shift 31
	EQL  shift 24
	NEQ  shift 25
	LSS  shift 26
	GTR  shift 27
	LEQ  shift 28
	GEQ  shift 29
	SHL  shift 35
	SHR  shift 36
	IN  shift 39
	'|'  shift 32
	'^'  shift 34
	'&'  shift 33
	'+'  shift 19
	'-'  shift 20
	'*'  shift 21
	'/'  shift 22
	'%'  shift 23
	'.'  shift 37
	'['  shift 38
	']'  shift 81
	':'  shift 82
	.  error


state 71
	varAccess:  expr '[' ':'.expr ']' 
	varAccess:  expr '[' ':'.']' 

	LITERAL_NIL  shift 10
	LITERAL_BOOL  shift 11
	LITERAL_NUMBER  shift 12
	LITERAL_STRING  shift 13
	IDENT  shift 9
	BIT_NOT  shift 18
	'-'  shift 16
	'!'  shift 17
	'['  shift 14
	']'  shift 84
	'('  shift 8
	'{'  shift 15
	.  error

	expr  goto 83
	literal  goto 3
	math  goto 4
	logic  goto 5
	bitManipulation  goto 6
	varAccess  goto 7

state 72
	math:  expr.'+' expr 
	math:  expr.'-' expr 
	math:  expr.'*' expr 
	math:  expr.'/' expr 
	math:  expr.'%' expr 
	logic:  expr.EQL expr 
	logic:  expr.NEQ expr 
	logic:  expr.LSS expr 
	logic:  expr.GTR expr 
	logic:  expr.LEQ expr 
	logic:  expr.GEQ expr 
	logic:  expr.AND expr 
	logic:  expr.OR expr 
	bitManipulation:  expr.'|' expr 
	bitManipulation:  expr.'&' expr 
	bitManipulation:  expr.'^' expr 
	bitManipulation:  expr.SHL expr 
	bitManipulation:  expr.SHR expr 
	varAccess:  expr.'.' IDENT 
	varAccess:  expr.'[' expr ']' 
	varAccess:  expr.IN expr 
	varAccess:  expr IN expr.    (42)
	varAccess:  expr.'[' expr ':' expr ']' 
	varAccess:  expr.'[' ':' expr ']' 
	varAccess:  expr.'[' expr ':' ']' 
	varAccess:  expr.'[' ':' ']' 

	'.'  shift 37
	'['  shift 38
	.  reduce 42 (src line 126)


state 73
	expr:  '(' expr ')'.    (7)

	.  reduce 7 (src line 76)


state 74
	expr:  IDENT '(' ')'.    (8)

	.  reduce 8 (src line 77)


state 75
	expr:  IDENT '(' exprList.')' 
	exprList:  exprList.',' expr 

	')'  shift 85
	','  shift 77
	.  error


state 76
	literal:  '[' exprList ']'.    (15)

	.  reduce 15 (src line 87)


state 77
	exprList:  exprList ','.expr 

	LITERAL_NIL  shift 10
	LITERAL_BOOL  shift 11
	LITERAL_NUMBER  shift 12
	LITERAL_STRING  shift 13
	IDENT  shift 9
	BIT_NOT  shift 18
	'-'  shift 16
	'!'  shift 17
	'['  shift 14
	'('  shift 8
	'{'  shift 15
	.  error

	expr  goto 86
	literal  goto 3
	math  goto 4
	logic  goto 5
	bitManipulation  goto 6
	varAccess  goto 7

state 78
	literal:  '{' exprMap '}'.    (17)

	.  reduce 17 (src line 89)


state 79
	exprMap:  exprMap ','.expr ':' expr 

	LITERAL_NIL  shift 10
	LITERAL_BOOL  shift 11
	LITERAL_NUMBER  shift 12
	LITERAL_STRING  shift 13
	IDENT  shift 9
	BIT_NOT  shift 18
	'-'  shift 16
	'!'  shift 17
	'['  shift 14
	'('  shift 8
	'{'  shift 15
	.  error

	expr  goto 87
	literal  goto 3
	math  goto 4
	logic  goto 5
	bitManipulation  goto 6
	varAccess  goto 7

state 80
	exprMap:  expr ':'.expr 

	LITERAL_NIL  shift 10
	LITERAL_BOOL  shift 11
	LITERAL_NUMBER  shift 12
	LITERAL_STRING  shift 13
	IDENT  shift 9
	BIT_NOT  shift 18
	'-'  shift 16
	'!'  shift 17
	'['  shift 14
	'('  shift 8
	'{'  shift 15
	.  error

	expr  goto 88
	literal  goto 3
	math  goto 4
	logic  goto 5
	bitManipulation  goto 6
	varAccess  goto 7

state 81
	varAccess:  expr '[' expr ']'.    (41)

	.  reduce 41 (src line 125)


state 82
	varAccess:  expr '[' expr ':'.expr ']' 
	varAccess:  expr '[' expr ':'.']' 

	LITERAL_NIL  shift 10
	LITERAL_BOOL  shift 11
	LITERAL_NUMBER  shift 12
	LITERAL_STRING  shift 13
	IDENT  shift 9
	BIT_NOT  shift 18
	'-'  shift 16
	'!'  shift 17
	'['  shift 14
	']'  shift 90
	'('  shift 8
	'{'  shift 15
	.  error

	expr  goto 89
	literal  goto 3
	math  goto 4
	logic  goto 5
	bitManipulation  goto 6
	varAccess  goto 7

state 83
	math:  expr.'+' expr 
	math:  expr.'-' expr 
	math:  expr.'*' expr 
	math:  expr.'/' expr 
	math:  expr.'%' expr 
	logic:  expr.EQL expr 
	logic:  expr.NEQ expr 
	logic:  expr.LSS expr 
	logic:  expr.GTR expr 
	logic:  expr.LEQ expr 
	logic:  expr.GEQ expr 
	logic:  expr.AND expr 
	logic:  expr.OR expr 
	bitManipulation:  expr.'|' expr 
	bitManipulation:  expr.'&' expr 
	bitManipulation:  expr.'^' expr 
	bitManipulation:  expr.SHL expr 
	bitManipulation:  expr.SHR expr 
	varAccess:  expr.'.' IDENT 
	varAccess:  expr.'[' expr ']' 
	varAccess:  expr.IN expr 
	varAccess:  expr.'[' expr ':' expr ']' 
	varAccess:  expr.'[' ':' expr ']' 
	varAccess:  expr '[' ':' expr.']' 
	varAccess:  expr.'[' expr ':' ']' 
	varAccess:  expr.'[' ':' ']' 

	AND  shift 30
	OR  shift 31
	EQL  shift 24
	NEQ  shift 25
	LSS  shift 26
	GTR  shift 27
	LEQ  shift 28
	GEQ  shift 29
	SHL  shift 35
	SHR  shift 36
	IN  shift 39
	'|'  shift 32
	'^'  shift 34
	'&'  shift 33
	'+'  shift 19
	'-'  shift 20
	'*'  shift 21
	'/'  shift 22
	'%'  shift 23
	'.'  shift 37
	'['  shift 38
	']'  shift 91
	.  error


state 84
	varAccess:  expr '[' ':' ']'.    (46)

	.  reduce 46 (src line 130)


state 85
	expr:  IDENT '(' exprList ')'.    (9)

	.  reduce 9 (src line 78)


state 86
	math:  expr.'+' expr 
	math:  expr.'-' expr 
	math:  expr.'*' expr 
	math:  expr.'/' expr 
	math:  expr.'%' expr 
	logic:  expr.EQL expr 
	logic:  expr.NEQ expr 
	logic:  expr.LSS expr 
	logic:  expr.GTR expr 
	logic:  expr.LEQ expr 
	logic:  expr.GEQ expr 
	logic:  expr.AND expr 
	logic:  expr.OR expr 
	bitManipulation:  expr.'|' expr 
	bitManipulation:  expr.'&' expr 
	bitManipulation:  expr.'^' expr 
	bitManipulation:  expr.SHL expr 
	bitManipulation:  expr.SHR expr 
	varAccess:  expr.'.' IDENT 
	varAccess:  expr.'[' expr ']' 
	varAccess:  expr.IN expr 
	varAccess:  expr.'[' expr ':' expr ']' 
	varAccess:  expr.'[' ':' expr ']' 
	varAccess:  expr.'[' expr ':' ']' 
	varAccess:  expr.'[' ':' ']' 
	exprList:  exprList ',' expr.    (48)

	AND  shift 30
	OR  shift 31
	EQL  shift 24
	NEQ  shift 25
	LSS  shift 26
	GTR  shift 27
	LEQ  shift 28
	GEQ  shift 29
	SHL  shift 35
	SHR  shift 36
	IN  shift 39
	'|'  shift 32
	'^'  shift 34
	'&'  shift 33
	'+'  shift 19
	'-'  shift 20
	'*'  shift 21
	'/'  shift 22
	'%'  shift 23
	'.'  shift 37
	'['  shift 38
	.  reduce 48 (src line 135)


state 87
	math:  expr.'+' expr 
	math:  expr.'-' expr 
	math:  expr.'*' expr 
	math:  expr.'/' expr 
	math:  expr.'%' expr 
	logic:  expr.EQL expr 
	logic:  expr.NEQ expr 
	logic:  expr.LSS expr 
	logic:  expr.GTR expr 
	logic:  expr.LEQ expr 
	logic:  expr.GEQ expr 
	logic:  expr.AND expr 
	logic:  expr.OR expr 
	bitManipulation:  expr.'|' expr 
	bitManipulation:  expr.'&' expr 
	bitManipulation:  expr.'^' expr 
	bitManipulation:  expr.SHL expr 
	bitManipulation:  expr.SHR expr 
	varAccess:  expr.'.' IDENT 
	varAccess:  expr.'[' expr ']' 
	varAccess:  expr.IN expr 
	varAccess:  expr.'[' expr ':' expr ']' 
	varAccess:  expr.'[' ':' expr ']' 
	varAccess:  expr.'[' expr ':' ']' 
	varAccess:  expr.'[' ':' ']' 
	exprMap:  exprMap ',' expr.':' expr 

	AND  shift 30
	OR  shift 31
	EQL  shift 24
	NEQ  shift 25
	LSS  shift 26
	GTR  shift 27
	LEQ  shift 28
	GEQ  shift 29
	SHL  shift 35
	SHR  shift 36
	IN  shift 39
	'|'  shift 32
	'^'  shift 34
	'&'  shift 33
	'+'  shift 19
	'-'  shift 20
	'*'  shift 21
	'/'  shift 22
	'%'  shift 23
	'.'  shift 37
	'['  shift 38
	':'  shift 92
	.  error


state 88
	math:  expr.'+' expr 
	math:  expr.'-' expr 
	math:  expr.'*' expr 
	math:  expr.'/' expr 
	math:  expr.'%' expr 
	logic:  expr.EQL expr 
	logic:  expr.NEQ expr 
	logic:  expr.LSS expr 
	logic:  expr.GTR expr 
	logic:  expr.LEQ expr 
	logic:  expr.GEQ expr 
	logic:  expr.AND expr 
	logic:  expr.OR expr 
	bitManipulation:  expr.'|' expr 
	bitManipulation:  expr.'&' expr 
	bitManipulation:  expr.'^' expr 
	bitManipulation:  expr.SHL expr 
	bitManipulation:  expr.SHR expr 
	varAccess:  expr.'.' IDENT 
	varAccess:  expr.'[' expr ']' 
	varAccess:  expr.IN expr 
	varAccess:  expr.'[' expr ':' expr ']' 
	varAccess:  expr.'[' ':' expr ']' 
	varAccess:  expr.'[' expr ':' ']' 
	varAccess:  expr.'[' ':' ']' 
	exprMap:  expr ':' expr.    (49)

	AND  shift 30
	OR  shift 31
	EQL  shift 24
	NEQ  shift 25
	LSS  shift 26
	GTR  shift 27
	LEQ  shift 28
	GEQ  shift 29
	SHL  shift 35
	SHR  shift 36
	IN  shift 39
	'|'  shift 32
	'^'  shift 34
	'&'  shift 33
	'+'  shift 19
	'-'  shift 20
	'*'  shift 21
	'/'  shift 22
	'%'  shift 23
	'.'  shift 37
	'['  shift 38
	.  reduce 49 (src line 138)


state 89
	math:  expr.'+' expr 
	math:  expr.'-' expr 
	math:  expr.'*' expr 
	math:  expr.'/' expr 
	math:  expr.'%' expr 
	logic:  expr.EQL expr 
	logic:  expr.NEQ expr 
	logic:  expr.LSS expr 
	logic:  expr.GTR expr 
	logic:  expr.LEQ expr 
	logic:  expr.GEQ expr 
	logic:  expr.AND expr 
	logic:  expr.OR expr 
	bitManipulation:  expr.'|' expr 
	bitManipulation:  expr.'&' expr 
	bitManipulation:  expr.'^' expr 
	bitManipulation:  expr.SHL expr 
	bitManipulation:  expr.SHR expr 
	varAccess:  expr.'.' IDENT 
	varAccess:  expr.'[' expr ']' 
	varAccess:  expr.IN expr 
	varAccess:  expr.'[' expr ':' expr ']' 
	varAccess:  expr '[' expr ':' expr.']' 
	varAccess:  expr.'[' ':' expr ']' 
	varAccess:  expr.'[' expr ':' ']' 
	varAccess:  expr.'[' ':' ']' 

	AND  shift 30
	OR  shift 31
	EQL  shift 24
	NEQ  shift 25
	LSS  shift 26
	GTR  shift 27
	LEQ  shift 28
	GEQ  shift 29
	SHL  shift 35
	SHR  shift 36
	IN  shift 39
	'|'  shift 32
	'^'  shift 34
	'&'  shift 33
	'+'  shift 19
	'-'  shift 20
	'*'  shift 21
	'/'  shift 22
	'%'  shift 23
	'.'  shift 37
	'['  shift 38
	']'  shift 93
	.  error


state 90
	varAccess:  expr '[' expr ':' ']'.    (45)

	.  reduce 45 (src line 129)


state 91
	varAccess:  expr '[' ':' expr ']'.    (44)

	.  reduce 44 (src line 128)


state 92
	exprMap:  exprMap ',' expr ':'.expr 

	LITERAL_NIL  shift 10
	LITERAL_BOOL  shift 11
	LITERAL_NUMBER  shift 12
	LITERAL_STRING  shift 13
	IDENT  shift 9
	BIT_NOT  shift 18
	'-'  shift 16
	'!'  shift 17
	'['  shift 14
	'('  shift 8
	'{'  shift 15
	.  error

	expr  goto 94
	literal  goto 3
	math  goto 4
	logic  goto 5
	bitManipulation  goto 6
	varAccess  goto 7

state 93
	varAccess:  expr '[' expr ':' expr ']'.    (43)

	.  reduce 43 (src line 127)


state 94
	math:  expr.'+' expr 
	math:  expr.'-' expr 
	math:  expr.'*' expr 
	math:  expr.'/' expr 
	math:  expr.'%' expr 
	logic:  expr.EQL expr 
	logic:  expr.NEQ expr 
	logic:  expr.LSS expr 
	logic:  expr.GTR expr 
	logic:  expr.LEQ expr 
	logic:  expr.GEQ expr 
	logic:  expr.AND expr 
	logic:  expr.OR expr 
	bitManipulation:  expr.'|' expr 
	bitManipulation:  expr.'&' expr 
	bitManipulation:  expr.'^' expr 
	bitManipulation:  expr.SHL expr 
	bitManipulation:  expr.SHR expr 
	varAccess:  expr.'.' IDENT 
	varAccess:  expr.'[' expr ']' 
	varAccess:  expr.IN expr 
	varAccess:  expr.'[' expr ':' expr ']' 
	varAccess:  expr.'[' ':' expr ']' 
	varAccess:  expr.'[' expr ':' ']' 
	varAccess:  expr.'[' ':' ']' 
	exprMap:  exprMap ',' expr ':' expr.    (50)

	AND  shift 30
	OR  shift 31
	EQL  shift 24
	NEQ  shift 25
	LSS  shift 26
	GTR  shift 27
	LEQ  shift 28
	GEQ  shift 29
	SHL  shift 35
	SHR  shift 36
	IN  shift 39
	'|'  shift 32
	'^'  shift 34
	'&'  shift 33
	'+'  shift 19
	'-'  shift 20
	'*'  shift 21
	'/'  shift 22
	'%'  shift 23
	'.'  shift 37
	'['  shift 38
	.  reduce 50 (src line 140)


38 terminals, 10 nonterminals
51 grammar rules, 95/8000 states
0 shift/reduce, 0 reduce/reduce conflicts reported
59 working sets used
memory: parser 208/120000
82 extra closures
832 shift entries, 1 exceptions
42 goto entries
166 entries saved by goto default
Optimizer space used: output 534/120000
534 table entries, 114 zero
maximum spread: 38, maximum offset: 92
